#include<stdio.h>
//#include<string.h>    //strlen
#include<winsock2.h>

#pragma comment(lib,"ws2_32.lib") //Winsock Library
//#include<arpa/inet.h> //inet_addr

int main(int argc , char *argv[])
{
    WSADATA wsa;
    //int socket_desc;
    SOCKET socket_desc;
    struct sockaddr_in server;
    char *message , server_reply[4096];
    //int *message[4096] , server_reply[4096];

    printf("\nInitialising Winsock...");
    if (WSAStartup(MAKEWORD(2,2),&wsa) !=0 )
    {
        printf("Fail.Error Code : %d",WSAGetLastError() );
        return 1;
    }
    printf("Initialised. \n");
    //Create socket
    if ((socket_desc =socket(AF_INET , SOCK_STREAM , 0))==INVALID_SOCKET)
    {
        printf("Could not create socket : %d",WSAGetLastError());
    }
    printf("socket create \n");

    server.sin_addr.s_addr = inet_addr("169.254.11.25");
    server.sin_family = AF_INET;
    server.sin_port = htons( 2000 );

    //Connect to remote server
    if (connect(socket_desc , (struct sockaddr *)&server , sizeof(server)) < 0)
    {
        puts("connect error");
        return 1;
    }

    puts("Connected\n");

    //Send some data
    message = "GET / HTTP/1.1\r\n\r\n";
    //*message=3;
    if( send(socket_desc , &message , strlen(message) , 0) < 0)
    //if( send(socket_desc , (char)&message , sizeof(message) , 0) < 0)
    {
        puts("Send failed");
        return 1;
    }
    puts("Data Send\n");

    //Receive a reply from the server
    //if( recv(socket_desc, server_reply , 2000 , 0) < 0)
    if( recv(socket_desc, &server_reply , sizeof(server_reply) , 0) < 0)
    {
        puts("recv failed");
    }
    puts("Reply received\n");

    //Add a NULL terminating character to make it a proper string before printing
    server_reply[4096]='\0';
    puts(server_reply);

    return 0;
}
